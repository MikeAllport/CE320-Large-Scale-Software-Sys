package group9.ButtonHandling;

import group9.CollageMakerApplication;
import group9.RandomCollageGenerator.CollageGeneratorBinaryTree;
import group9.RandomCollageGenerator.ICollageGenerator;
import group9.CollageWindow.CollagePreview_Page;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;

public class GenerateCollageButtonHandler implements ActionListener {
    private final CollageMakerApplication theApp;

    public GenerateCollageButtonHandler(CollageMakerApplication theApp) {
        this.theApp = theApp;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        // paint collage to new image

        if (theApp.getBufferedImages().size() > 1) {
            Dimension sizeToDraw = new Dimension(1200, 900);
            ICollageGenerator generator = new CollageGeneratorBinaryTree(theApp.getBufferedImages(), sizeToDraw, true);
            theApp.collages.add(generator.getCollage());
            generator = new CollageGeneratorBinaryTree(theApp.getBufferedImages(), sizeToDraw, true);
            theApp.collages.add(generator.getCollage());
            generator = new CollageGeneratorBinaryTree(theApp.getBufferedImages(), sizeToDraw, true);
            theApp.collages.add(generator.getCollage());

            CollagePreview_Page collagepreview_page = null;
            try {
                collagepreview_page = new CollagePreview_Page(theApp);
            } catch (IOException ioException) {
                ioException.printStackTrace();
            }
            theApp.setDisplay(collagepreview_page);
            System.out.println("CODE WILL GENERATE A COLLAGE BASED ON THE IMAGES THAT ARE LOADED AND GO TO THE NEXT PAGE TO PREVIEW 4-5 COLLAGES");
        } else {
            JOptionPane.showMessageDialog(null, "Insufficient images uploaded");
        }
    }
}
