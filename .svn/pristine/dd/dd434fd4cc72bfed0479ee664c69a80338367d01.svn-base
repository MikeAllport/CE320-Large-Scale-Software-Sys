package group9;

import group9.homepage_window.MenuBar;
import group9.homepage_window.Test_Homepage;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;

public class CollageMakerApplication extends JFrame {
    // need to turn into array list, and have arrow buttons to scroll through
    public BufferedImage theCollage;
    private final ArrayList<File> imageFiles = new ArrayList<>();
    private final ArrayList<BufferedImage> bufferedImages = new ArrayList<>();
    private final DefaultListModel<File> filenamesModel = new DefaultListModel<File>();//list model to work with JList
    private final Test_Homepage homepage;
    private static String current;

    public static void setCurrent(String cur) {
        current = cur;
    }

    public static String getCurrentScreen() {
        return current;
    }

    public CollageMakerApplication() throws IOException {
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setPreferredSize(Toolkit.getDefaultToolkit().getScreenSize());
        setResizable(false);
        MenuBar m = new MenuBar();
        //setJMenuBar(m);

        homepage = new Test_Homepage(this);
        setCurrent("homepage");
        setDisplay(homepage);
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }
        setTitle("GROUP 09");
        ImageIcon titleIcon = new ImageIcon("trunk\\resources\\icons\\frame_title_icon_piccollage.png");
        setIconImage(titleIcon.getImage());
        setVisible(true);
        pack();
    }

    public void setDisplay(JPanel homepage_panel) {
        getContentPane().removeAll();
        add(homepage_panel);
        validate();
        repaint();
    }

    public void addFiles(File[] files) {
        imageFiles.addAll(Arrays.asList(files));
        addFileNamesToModel(files);
    }

    public void deleteFile(File file) {
        imageFiles.remove(getFileFromName(file.getName()));
        filenamesModel.removeElement(file);
    }

    public File getFileFromName(String filename) {
        for (File f : imageFiles) if (f.getName().equals(filename)) return f;
        return null;
    }

    public void createImagesFromFiles() throws IOException {
        for (File f : imageFiles) {
            BufferedImage image = null;
            try {
                image = ImageIO.read(f);
            } catch (IOException ioException) {
                ioException.printStackTrace();
            }
            bufferedImages.add(image);
        }
    }

    public void addFileNamesToModel(File[] files) {
        for (File f : files) {
            filenamesModel.addElement(f);
        }
    }

    public ArrayList<BufferedImage> getBufferedImages() {
        try {
            bufferedImages.clear();
            createImagesFromFiles();
            return bufferedImages;
        } catch (IOException e) {
            return new ArrayList<>();
        }
    }

    public static BufferedImage rotate(BufferedImage src) {
        if (src == null) {
            System.out.println("Image is null");
            return null;
        }
        BufferedImage dest = new BufferedImage(src.getWidth(), src.getHeight(), src.getType());
        Graphics2D g2d = dest.createGraphics();

        AffineTransform origAT = g2d.getTransform();

        AffineTransform rot = new AffineTransform();
        rot.rotate(Math.toRadians(90), src.getWidth() / 2, src.getHeight() / 2);
        g2d.transform(rot);

        g2d.drawImage(src, 0, 0, null);

        g2d.setTransform(origAT);
        g2d.dispose();

        return dest;
    }

    public Test_Homepage getHomepage() {
        return homepage;
    }

    public DefaultListModel<File> getFileNamesModel() {
        return filenamesModel;
    }

    public ArrayList<File> getImageFiles() {
        return imageFiles;
    }

    public static void main(String[] args) throws IOException {
        new CollageMakerApplication();
    }


}

