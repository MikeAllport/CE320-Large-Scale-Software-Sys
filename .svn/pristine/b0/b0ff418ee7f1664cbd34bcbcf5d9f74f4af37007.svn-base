package group9.collage_generators;

import javax.imageio.ImageIO;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

public class CollageGenerator {

    public static Dimension getScaledDimension(Dimension imgSize, Dimension boundary) {
        int original_width = imgSize.width;
        int original_height = imgSize.height;
        int bound_width = boundary.width;
        int bound_height = boundary.height;
        int new_width = original_width;
        int new_height = original_height;

        // first check if we need to scale width
        if (original_width > bound_width) {
            //scale width to fit
            new_width = bound_width;
            //scale height to maintain aspect ratio
            new_height = (new_width * original_height) / original_width;
        }

        // then check if we need to scale even with the new height
        if (new_height > bound_height) {
            //scale height to fit instead
            new_height = bound_height;
            //scale width to maintain aspect ratio
            new_width = (new_height * original_width) / original_height;
        }

        return new Dimension(new_width, new_height);
    }
    //Get all images from the folder and get all the heights and widths and add them together do get the collage size
    BufferedImage collage = new BufferedImage(1200,928,BufferedImage.TYPE_INT_RGB);
    //combines images in resources into a single "collage" image saved in resources. Just a test
    public CollageGenerator() throws IOException {
        ArrayList<BufferedImage> imageList = new ArrayList<>();
        BufferedImage img1 = ImageIO.read(new File("trunk/resources/test images/GettyImages-166106089-600x464.jpg"));
        BufferedImage img2 = ImageIO.read(new File("trunk/resources/test images/dog.jpg"));
        BufferedImage img3 = ImageIO.read(new File("trunk/resources/test images/cat.jpg"));
        BufferedImage img4 = ImageIO.read(new File("trunk/resources/test images/kitten.jpg"));
       /* try {
            BufferedImage bufferedImage1 = ImageIO.read((ImageInputStream) img1);
            BufferedImage bufferedImage2 = ImageIO.read((ImageInputStream) img2);
            BufferedImage bufferedImage3 = ImageIO.read((ImageInputStream) img3);
            BufferedImage bufferedImage4 = ImageIO.read((ImageInputStream) img4);
            imageList.add(bufferedImage1);
            imageList.add(bufferedImage2);
            imageList.add(bufferedImage3);
            imageList.add(bufferedImage4);
        } catch (IOException e) {
            e.printStackTrace();
        }*/
        /*int x = 0;
        int y = 0;
        Graphics2D collage_creation = collage.createGraphics();
        for (BufferedImage image : imageList){
            int height = collage.getHeight(); //1080
            int width = collage.getWidth(); //1920
            collage_creation.drawImage(image, x, y, null);
        }*/

        Dimension imgSize2 = new Dimension(img2.getWidth(), img2.getHeight());
        Dimension imgSize3 = new Dimension(img3.getWidth(), img3.getHeight());
        Dimension imgSize4 = new Dimension(img4.getWidth(), img4.getHeight());
        Dimension boundary = new Dimension(600, 464);
        System.out.println(getScaledDimension(imgSize2, boundary));
        System.out.println(getScaledDimension(imgSize2, boundary).getHeight());
        System.out.println(getScaledDimension(imgSize2, boundary).getWidth());
        Graphics2D collage_creation = collage.createGraphics();
        collage_creation.drawImage(img1,0,0,null);
        collage_creation.drawImage(img2,0,img1.getHeight(),600,464,null);
        collage_creation.drawImage(img3,img1.getWidth(),0, 600, 464,null);
        collage_creation.drawImage(img4,img1.getWidth(),img1.getHeight(), 600, 464,null);
        collage_creation.dispose();
        File generated_Collage = new File("trunk/resources/testCollages/generated_collage.jpg");
        ImageIO.write(collage, "jpg", generated_Collage); //did some refactoring, nothing major - Hiraj Keshavji
    }

    public void GridGenerator( int numOfImages){
//        for

    }
    public static void main(String[] args) throws IOException {
        new CollageGenerator();
    }
}