package group9;

import group9.homepage_window.Homepage;

import javax.imageio.ImageIO;
import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;

public class CollageMakerApplication extends JFrame {
    private final ArrayList<File> imageFiles = new ArrayList<>();
    private final ArrayList<BufferedImage> bufferedImages = new ArrayList<>();
    private final DefaultListModel<String> filenamesModel = new DefaultListModel<>();//list model to work with JList

    // need to turn into array list, and have arrow buttons to scroll through
    public BufferedImage theCollage;

    public CollageMakerApplication() throws IOException {
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(1400, 800);
        setVisible(true);
        setResizable(false);

        Homepage homepage = new Homepage(this);
        setDisplay(homepage);
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            e.printStackTrace();
        }
        setTitle("GROUP 09");
        ImageIcon titleIcon = new ImageIcon("trunk\\resources\\icons\\frame_title_icon_piccollage.png");
        setIconImage(titleIcon.getImage());
    }

    public void setDisplay(JPanel homepage_panel){
        getContentPane().removeAll();
        add(homepage_panel);
        validate();
        repaint();
    }

    public void addFiles(File[] files){
        imageFiles.addAll(Arrays.asList(files));
        addFileNamesToModel(files);
    }

    public void deleteFile(String filename){
        imageFiles.remove(getFileFromName(filename));
        filenamesModel.removeElement(filename);
    }

    public File getFileFromName(String filename){
        for (File f : imageFiles) if(f.getName().equals(filename))return f;
        return null;
    }

    public void createImagesFromFiles() throws IOException {
        for (File f : imageFiles) {
            BufferedImage image = null;
            try {
                image = ImageIO.read(f);
            } catch (IOException ioException) {
                ioException.printStackTrace();
            }
            bufferedImages.add(image);
        }
    }

    public void addFileNamesToModel(File[] files){
        for( File f : files){
            String filename = f.getName();
            filenamesModel.addElement(filename);
        }
    }

    public ArrayList<BufferedImage> getBufferedImages()
    {
        try {
            bufferedImages.clear();
            createImagesFromFiles();
            return bufferedImages;
        } catch (IOException e){ return new ArrayList<>(); }
    }

    public DefaultListModel<String> getFileNamesModel(){ return filenamesModel;}

    public static void main(String[] args) throws IOException {
        new CollageMakerApplication();
    }
}

