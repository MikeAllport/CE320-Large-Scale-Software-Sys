package group9.unit_test;

import group9.utils.Utils;
import org.junit.Assert;
import org.junit.jupiter.api.Test;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import static org.junit.jupiter.api.Assertions.assertThrows;

public class ImageTesting {

    private static void execute() throws IOException {  //directory does not exist
        File kitten = new File("trunk\\resources\\testImages\\kien.jpg"); //expect IOException
        BufferedImage kittenImage = (ImageIO.read(kitten));
    }

    @Test
    public void testFileNotNull() {
        File kitten = new File("trunk\\resources\\testImages\\kitten.jpg");
        Assert.assertNotNull(kitten);
    }

    @Test
    public void testBufferedImageNotNull() {
        BufferedImage puppy = null;
        try {
            puppy = ImageIO.read(getClass().getResource("puppyTest.jpg"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        Assert.assertNotNull(puppy);
    }

    @Test
    public void testBufferedImage() {
        assertThrows(IOException.class,
                ImageTesting::execute);

    }

    @Test
    public void testRescaling() {
        BufferedImage puppy = null;
        try {
            puppy = ImageIO.read(getClass().getResource("puppyTest.jpg")); //original 256X256
        } catch (IOException e) {
            e.printStackTrace();
        }
        int targetWidth = 600;
        int targetHeight = 600;
        BufferedImage rescaledPuppy = Utils.rescaleIcon(puppy, targetWidth, targetHeight);
        Assert.assertEquals(targetHeight, rescaledPuppy.getHeight());
        Assert.assertEquals(targetWidth, rescaledPuppy.getWidth());
    }

}


