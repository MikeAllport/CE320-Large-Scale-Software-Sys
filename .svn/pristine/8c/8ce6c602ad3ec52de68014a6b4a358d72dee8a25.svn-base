package group9.CollageWindow;

import group9.Piccollage;
import group9.utils.Utils;

import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.border.LineBorder;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import static group9.CollageWindow.Colors.*;

public class CollageOptions extends JTabbedPane {

    public CollageOptions(Piccollage theApp) {
        super();
        setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);
        setMinimumSize(new Dimension(400, 90));

        JPanel tab1 = new JPanel();
        tab1.setLayout(new BoxLayout(tab1, BoxLayout.X_AXIS));

        JScrollPane tab1_scrollable = new JScrollPane(tab1); //making tab scrollable

        JLabel lblRetro = new JLabel();
        lblRetro.setIcon(getImageIcon(lblRetro));

        tab1.add(Box.createRigidArea(new Dimension(5,0))); //add H-Gap
        tab1.add(lblRetro);
        tab1.add(Box.createRigidArea(new Dimension(5,0))); //add H-Gap

        JLabel lblComic = new JLabel();
        lblComic.setText("Comic");

        tab1.add(Box.createRigidArea(new Dimension(5,0))); //add H-Gap
        tab1.add(lblComic);
        tab1.add(Box.createRigidArea(new Dimension(5,0))); //add H-Gap


        tab1_scrollable.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        tab1_scrollable.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER);

        addTab("Filter", tab1_scrollable);


        JPanel tab2 = new JPanel();
        addTab("Frames", tab2);

        JPanel tab3 = new JPanel();
        addTab("Effects", tab3);

        JPanel tab4 = new JPanel();
        addTab("Rotate", tab4);

        JPanel tab5 = new JPanel();
        addTab("Stickers/Text", tab5);

        JPanel tab6 = new JPanel();
        String[] colours = {BLACK.getLabel(), BEIGE.getLabel(), GREY.getLabel(), WHITE.getLabel()};
        JComboBox<String> comboColours = new JComboBox<>(colours);
        comboColours.addActionListener(new ColorComboListener(theApp));
        comboColours.setFont(new Font("Arial", Font.BOLD, 14));
        comboColours.setEditable(false);
        tab6.add(comboColours);

        JPanel tab7 = new JPanel();
        Integer[] rows = {2, 3};
        Integer[] cols = {1, 2};
        JComboBox<Integer> comboRows = new JComboBox<>(rows);
        JComboBox<Integer> comboCols = new JComboBox<>(cols);
        tab7.add(comboRows);
        tab7.add(comboCols);
        addTab("Grid Options", tab7);

        addTab("Background Colour", tab6);

//        setLayout(new GridBagLayout());
//
//        GridBagConstraints c = new GridBagConstraints();
//        c.insets = new Insets(5, 5, 5, 5);
//
//        c.gridx = 0;
//        c.gridy = 0;
//
//
//        add(comboColours, c);
//
//        c.gridx = 1;
//        String[] format = {"jpg", "png"};
//
//        JComboBox<String> comboFormat = new JComboBox<>(format);
//        comboFormat.setFont(new Font("Arial", Font.BOLD, 14));
//        comboFormat.setEditable(false);
//
//        add(comboFormat, c);
//
//        c.gridx = 0;
//        c.gridy = 1;
//
//        JRadioButton randomGeneration = new JRadioButton("RANDOM");
//        add(randomGeneration, c);
//
//        c.gridx = 1;
//        c.gridy = 1;
//        JRadioButton gridGeneration = new JRadioButton("GRID");
//        gridGeneration.setSelected(true);
//        add(gridGeneration, c);
//
//        ButtonGroup group = new ButtonGroup();
//        group.add(randomGeneration);
//        group.add(gridGeneration);
    }

    private ImageIcon getImageIcon(JLabel lbl) {
        BufferedImage image = null;
        try {
            image = ImageIO.read(new File(System.getProperty("user.dir") + "/trunk/resources/icons/retro_filter.png"));
        } catch (IOException ioException) {
            ioException.printStackTrace();
        }
        Image img = Utils.rescaleIcon(image, 50, 50);

        return new ImageIcon(img);
    }

    public static void main(String[] args) throws IOException {
/*        JFrame f = new JFrame();
        f .setPreferredSize(new Dimension(200, 400));

        // changed constructor of CollageOptions to take Piccollage reference as argument
        // if re-testing with this main method will have to take that into account
        f.add(new CollageOptions());
        f.setVisible(true);
        f.pack();*/
    }
}